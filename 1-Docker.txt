## 윈도우, 맥, 우분투 운영체재 별 Docker 설치
... 각자 실행 ...

## Docker 실행
$ docker run --help

$ docker run hello-world

Hello from Docker!
This message shows that your installation appears to be working correctly.
To generate this message, Docker took the following steps:
 1. The Docker client contacted the Docker daemon.
 2. The Docker daemon pulled the "hello-world" image from the Docker Hub.
    (arm64v8)
 3. The Docker daemon created a new container from that image which runs the
    executable that produces the output you are currently reading.
 4. The Docker daemon streamed that output to the Docker client, which sent it
    to your terminal.
To try something more ambitious, you can run an Ubuntu container with:
 $ docker run -it ubuntu bash
Share images, automate workflows, and more with a free Docker ID:
 https://hub.docker.com/
For more examples and ideas, visit:
 https://docs.docker.com/get-started/

## 파이선 팩키지(SciPy, NumPy, SciKit-Learn 등) 설치를 위한 MiniConda3 이미지 다운로드
$ docker pull continuumio/miniconda3

Using default tag: latest
latest: Pulling from continuumio/miniconda3
Digest: sha256:e5caba159335ca9cc9d7c78167d8b46283aa56fcc53ae9ffcab2a54e09000329
Status: Image is up to date for continuumio/miniconda3:latest
docker.io/continuumio/miniconda3:latest

## 다운로드된 Docker Image 실행
$ docker run -i -t continuumio/miniconda3 /bin/bash
(base) root@e5e4012cdfd1:/#

## 실행되는 Docker Image의 운영체제 확인
(base) root@e5e4012cdfd1:/# uname -a
Linux 62824b3233c6 6.6.26-linuxkit #1 SMP Sat Apr 27 04:13:19 UTC 2024 aarch64 GNU/Linux

## Python(MiniConda3)이 리눅스환경에 설치되었음을 확인
(base) root@e5e4012cdfd1:/# python --version
Python 3.12.3

## 로컬 환경으로 돌아가는 실행
(base) root@e5e4012cdfd1:/# exit
exit

---------------------------------------------------------------------------------------------------------------------------------------

## 다시 Docker Image 실행
$ docker run -i -t continuumio/miniconda3 /bin/bash

## 추가적으로 필요한 파이선 모듈 설치
(base) root@62824b3233c6:/# pip install beautifulsoup4 requests

## 사용했던 환경을 저장
(base) root@e5e4012cdfd1:/# exit
exit

$ docker ps -a
CONTAINER ID   IMAGE                    COMMAND       CREATED             STATUS                         PORTS     NAMES
62824b3233c6   continuumio/miniconda3   "/bin/bash"   6 minutes ago       Up 23 seconds                            friendly_lalande
a6b5a8d3bfc9   hello-world              "/hello"      About an hour ago   Exited (0) About an hour ago             infallible_lumiere

                    <id>     <name(:tag)>
$ docker commit 62824b3233c6 mlp:init (default - :latest)
sha256:d8dd68359075bf7a249d0f7be78d69b0f14c91e2f9aa9935a587d6de15776b70

$ docker images
REPOSITORY                    TAG       IMAGE ID       CREATED          SIZE
mlp                           init      e224831caee1   8 seconds ago    552MB
continuumio/miniconda3        latest    14adfdd8fbe7   2 days ago       550MB
hello-world                   latest    ee301c921b8a   13 months ago    9.14kB

---------------------------------------------------------------------------------------------------------------------------------------

## (로컬) 운영체제 환경과 (다커 이미지) 가상 환경은 서로 독립된 별개의 환경이므로,
로컬에서 작성한 파일을 가상 환경에 마운트해야 가상 환경에서 작성한 파일에 접근할 수 있음

윈도우
$ docker run -i -t -v $HOME/mlwork:/mlwork mlp:init /bin/bash 
맥
$ docker run -i -t -v /Users/charlie/Documents/mlwork:/mlwork mlp:init /bin/bash 
(base) root@cd9a75b10adf:~#

## 폴더가 마운트 되었는지 확인
(base) root@cd9a75b10adf:~# ls -l

lrwxrwxrwx   1 root root    7 May 13 00:00 bin -> usr/bin
drwxr-xr-x   2 root root 4096 Jan 28 21:20 boot
drwxr-xr-x   5 root root  360 Jun  1 04:48 dev
drwxr-xr-x   1 root root 4096 Jun  1 04:48 etc
drwxr-xr-x   2 root root 4096 Jan 28 21:20 home
lrwxrwxrwx   1 root root    7 May 13 00:00 lib -> usr/lib
drwxr-xr-x   2 root root 4096 May 13 00:00 media
drwxr-xr-x   2 root root   64 Jun  1 04:38 mlwork           <====== !
drwxr-xr-x   2 root root 4096 May 13 00:00 mnt
drwxr-xr-x   1 root root 4096 May 29 18:04 opt
dr-xr-xr-x 224 root root    0 Jun  1 04:48 proc
drwx------   1 root root 4096 Jun  1 04:03 root
drwxr-xr-x   1 root root 4096 May 29 18:03 run
lrwxrwxrwx   1 root root    8 May 13 00:00 sbin -> usr/sbin
drwxr-xr-x   2 root root 4096 May 13 00:00 srv
dr-xr-xr-x  11 root root    0 Jun  1 04:48 sys
drwxrwxrwt   1 root root 4096 Jun  1 04:03 tmp
drwxr-xr-x   1 root root 4096 May 13 00:00 usr
drwxr-xr-x   1 root root 4096 May 13 00:00 var

## 미니콘다3을 이용한 텐서플로우 설치
(base) root@cd9a75b10adf:~# conda install tensorflow

Channels:
 - defaults
Platform: linux-aarch64
Collecting package metadata (repodata.json): done
Solving environment: - warning  libmamba Added empty dependency for problem type SOLVER_RULE_UPDATE
failed
LibMambaUnsatisfiableError: Encountered problems while solving:
  - package tensorflow-2.10.0-eigen_py310hcf376f6_0 requires python 3.10.*, but none of the providers can be installed
Could not solve for environment specs
The following packages are incompatible
├─ pin-1 is installable and it requires
│  └─ python 3.12.* , which can be installed;
└─ tensorflow is not installable because there are no viable options
   ├─ tensorflow [2.10.0|2.11.0|2.12.0|2.8.2|2.9.1] would require
   │  └─ python 3.10.* , which conflicts with any installable versions previously reported;
   ├─ tensorflow [2.10.0|2.5.0|2.8.2|2.9.1] would require
   │  └─ python 3.7.* , which conflicts with any installable versions previously reported;
   ├─ tensorflow [2.10.0|2.11.0|...|2.9.1] would require
   │  └─ python 3.8.* , which conflicts with any installable versions previously reported;
   ├─ tensorflow [2.10.0|2.11.0|...|2.9.1] would require
   │  └─ python 3.9.* , which conflicts with any installable versions previously reported;
   └─ tensorflow 2.12.0 would require
      └─ python 3.11.* , which conflicts with any installable versions previously reported.

## 텐서플로우 설치할 때 위와 같이 파이선 버젼 변경 필요시
(base) root@cd9a75b10adf:~# conda search python
...
(base) root@cd9a75b10adf:~# conda install python=3.11.9
...
(base) root@cd9a75b10adf:~# conda install tensorflow
...

---------------------------------------------------------------------------------------------------------------------------------------

## IPython Shell 설치
(base) root@cd9a75b10adf:~# pip install ipython
...

## IPython Shell 실행
(base) root@cd9a75b10adf:~# ipython

Python 3.11.5 (main, Sep 11 2023, 13:18:50) [GCC 11.2.0]
Type 'copyright', 'credits' or 'license' for more information
IPython 8.25.0 -- An enhanced Interactive Python. Type '?' for help.

In [1]: 

## 텐서 플로우가 정상적으로 작동되는지 확인
In [1]: import tensorflow as tf

In [2]: 

## IPython 종료
In [1]: exit

---------------------------------------------------------------------------------------------------------------------------------------

## Jupyter Notebook 설치
(base) root@cd9a75b10adf:~# pip install jupyter notebook
...

## Jupyter Notebook 실행
(base) root@cd9a75b10adf:~# jupyter notebook

[I 2024-06-01 09:59:02.863 ServerApp] jupyter_lsp | extension was successfully linked.
[I 2024-06-01 09:59:02.864 ServerApp] jupyter_server_terminals | extension was successfully linked.
[I 2024-06-01 09:59:02.866 ServerApp] jupyterlab | extension was successfully linked.
[I 2024-06-01 09:59:02.868 ServerApp] notebook | extension was successfully linked.
[I 2024-06-01 09:59:02.869 ServerApp] Writing Jupyter server cookie secret to /root/.local/share/jupyter/runtime/jupyter_cookie_secret
[I 2024-06-01 09:59:02.963 ServerApp] notebook_shim | extension was successfully linked.
[I 2024-06-01 09:59:02.969 ServerApp] notebook_shim | extension was successfully loaded.
[I 2024-06-01 09:59:02.970 ServerApp] jupyter_lsp | extension was successfully loaded.
[I 2024-06-01 09:59:02.970 ServerApp] jupyter_server_terminals | extension was successfully loaded.
[I 2024-06-01 09:59:02.971 LabApp] JupyterLab extension loaded from /opt/conda/lib/python3.11/site-packages/jupyterlab
[I 2024-06-01 09:59:02.971 LabApp] JupyterLab application directory is /opt/conda/share/jupyter/lab
[I 2024-06-01 09:59:02.971 LabApp] Extension Manager is 'pypi'.
[I 2024-06-01 09:59:02.976 ServerApp] jupyterlab | extension was successfully loaded.
[I 2024-06-01 09:59:02.977 ServerApp] notebook | extension was successfully loaded.
[C 2024-06-01 09:59:02.977 ServerApp] Running as root is not recommended. Use --allow-root to bypass.

(base) root@cd9a75b10adf:~# jupyter notebook --allow-root

[I 2024-06-01 10:00:43.279 ServerApp] jupyter_lsp | extension was successfully linked.
[I 2024-06-01 10:00:43.280 ServerApp] jupyter_server_terminals | extension was successfully linked.
[I 2024-06-01 10:00:43.282 ServerApp] jupyterlab | extension was successfully linked.
[I 2024-06-01 10:00:43.284 ServerApp] notebook | extension was successfully linked.
[I 2024-06-01 10:00:43.374 ServerApp] notebook_shim | extension was successfully linked.
[I 2024-06-01 10:00:43.380 ServerApp] notebook_shim | extension was successfully loaded.
[I 2024-06-01 10:00:43.381 ServerApp] jupyter_lsp | extension was successfully loaded.
[I 2024-06-01 10:00:43.381 ServerApp] jupyter_server_terminals | extension was successfully loaded.
[I 2024-06-01 10:00:43.382 LabApp] JupyterLab extension loaded from /opt/conda/lib/python3.11/site-packages/jupyterlab
[I 2024-06-01 10:00:43.382 LabApp] JupyterLab application directory is /opt/conda/share/jupyter/lab
[I 2024-06-01 10:00:43.382 LabApp] Extension Manager is 'pypi'.
[I 2024-06-01 10:00:43.386 ServerApp] jupyterlab | extension was successfully loaded.
[I 2024-06-01 10:00:43.388 ServerApp] notebook | extension was successfully loaded.
[I 2024-06-01 10:00:43.388 ServerApp] Serving notebooks from local directory: /
[I 2024-06-01 10:00:43.388 ServerApp] Jupyter Server 2.14.1 is running at:
[I 2024-06-01 10:00:43.388 ServerApp] http://localhost:8888/tree?token=76061ac1a3fa4b845539d4244da874a0dc69dcb8ca3e2020
[I 2024-06-01 10:00:43.388 ServerApp]     http://127.0.0.1:8888/tree?token=76061ac1a3fa4b845539d4244da874a0dc69dcb8ca3e2020
[I 2024-06-01 10:00:43.388 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[W 2024-06-01 10:00:43.390 ServerApp] No web browser found: Error('could not locate runnable browser').
[C 2024-06-01 10:00:43.390 ServerApp] 
    To access the server, open this file in a browser:
        file:///root/.local/share/jupyter/runtime/jpserver-1428-open.html
    Or copy and paste one of these URLs:
        http://localhost:8888/tree?token=76061ac1a3fa4b845539d4244da874a0dc69dcb8ca3e2020
        http://127.0.0.1:8888/tree?token=76061ac1a3fa4b845539d4244da874a0dc69dcb8ca3e2020
[I 2024-06-01 10:00:43.396 ServerApp] Skipped non-installed server(s): bash-language-server, dockerfile-language-server-nodejs, javascript-typescript-langserver, jedi-language-server, julia-language-server, pyright, python-language-server, python-lsp-server, r-languageserver, sql-language-server, texlab, typescript-language-server, unified-language-server, vscode-css-languageserver-bin, vscode-html-languageserver-bin, vscode-json-languageserver-bin, yaml-language-server

## 브라우저에서 Jupyter Notebook 서버에 접속
http://localhost:8888/tree?token=76061ac1a3fa4b845539d4244da874a0dc69dcb8ca3e2020
또는
http://127.0.0.1:8888/tree?token=76061ac1a3fa4b845539d4244da874a0dc69dcb8ca3e2020
클릭

## Jupyter Notebook 종료
-> raise keybaord interreuption

^C[I 2024-06-01 10:10:12.877 ServerApp] interrupted
[I 2024-06-01 10:10:12.879 ServerApp] Serving notebooks from local directory: /
    0 active kernels
    Jupyter Server 2.14.1 is running at:
    http://localhost:8888/tree?token=76061ac1a3fa4b845539d4244da874a0dc69dcb8ca3e2020
        http://127.0.0.1:8888/tree?token=76061ac1a3fa4b845539d4244da874a0dc69dcb8ca3e2020
Shut down this Jupyter server (y/[n])? y
[C 2024-06-01 10:10:15.720 ServerApp] Shutdown confirmed
[I 2024-06-01 10:10:15.722 ServerApp] Shutting down 5 extension

---------------------------------------------------------------------------------------------------------------------------------------

... ?
$ docker run -i -t -p 8888:8888 mlp:init
... ?
(base) root@cd9a75b10adf:~# jupyter notebook --allow-root
... ?
